generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id_user         String    @id @default(uuid())
  nombre          String
  email           String    @unique
  rol             String
  password        String
  numero_telefono String
  eliminado       Boolean   @default(false)
  fecha_registro  DateTime  @default(now())
  fecha_editado   DateTime?

  // Relación con lote
  lotes             Lote[]
  // Relación con muestra
  muestras          Muestra[]
  // Relación con pedidos de cliente
  pedidos           Pedido[]  @relation("ClientePedido")
  // Relación con pedidos asignados
  pedidos_asignados Pedido[]  @relation("AsignadoPedido")
}

model Muestra {
  id_muestra     String   @id @default(uuid())
  nombre         String
  peso           Float
  user_id        String?
  analisis_id    String?   @unique
  fecha_registro DateTime @default(now())
  eliminado      Boolean  @default(false)

  // Relación con Usuario
  user     User?     @relation(fields: [user_id], references: [id_user])
  // Relación con Analisis
  analisis Analisis? @relation(fields: [analisis_id], references: [id_analisis])
}

model Lote {
  id_lote      String   @id
  productor    String
  finca        String
  region       String
  departamento String
  fecha_compra DateTime
  peso         Float
  variedades   String
  proceso      String
  user_id      String?
  analisis_id  String?  @unique
  eliminado    Boolean  @default(false)
  
  // Relación con Usuario
  user User? @relation(fields: [user_id], references: [id_user])
  // Relación con Analisis
  analisis Analisis? @relation(fields: [analisis_id], references: [id_analisis])
}

model Pedido {
  id_pedido        String    @id @default(uuid())
  fecha_pedido     DateTime
  tipo_tueste      String
  cantidad_tostado Float
  estado_pedido    String
  observaciones    String
  cliente_id       String
  asignado_a_id    String?
  fecha_asignacion DateTime?
  eliminado        Boolean   @default(false)

  // Relación con Usuario como Cliente 
  cliente User @relation(fields: [cliente_id], references: [id_user], name: "ClientePedido")

  // Relación con Usuario como Asignado
  asignado User? @relation(fields: [asignado_a_id], references: [id_user], name: "AsignadoPedido")
}

model Tueste {
  id_tueste                 String   @id @default(uuid())
  fecha_tueste              DateTime
  tostadora                 String
  peso_entrada              Float
  temperatura_entrada       Float
  llama_inicial             Float
  aire_inicial              Float
  punto_no_retorno          Float
  tiempo_despues_crack      Float
  temperatura_crack         Float
  temperatura_salida        Float
  tiempo_total              Float
  porcentaje_caramelizacion Float
  desarrollo                Float
  grados_desarrollo         Float
  peso_salida               Float
  merma                     Float
  agtrom_comercial          Float
  agtrom_gourmet            Float
  id_analisis_rapido        String   @unique
  eliminado                 Boolean  @default(false)

  // Relación con Analisis Rapido
  analisisRapido AnalisisRapido? @relation(fields: [id_analisis_rapido], references: [id_analisis_rapido])
}

model Analisis {
  id_analisis          String   @id @default(uuid())
  fecha_registro       DateTime @default(now())
  analisisFisico_id    String?  @unique
  analisisSensorial_id String?  @unique
  
  eliminado          Boolean  @default(false)

  // Relación con Analisis Fisico
  analisisFisico    AnalisisFisico?    @relation(fields: [analisisFisico_id], references: [id_analisis_fisico])
  //  Relación con Analisis Sensorial
  analisisSensorial AnalisisSensorial? @relation(fields: [analisisSensorial_id], references: [id_analisis_sensorial])

  Muestra Muestra?
  Lote    Lote?
}

model AnalisisFisico {
  id_analisis_fisico        String   @id @default(uuid())
  fecha_registro            DateTime @default(now())
  peso_muestra              Float
  peso_pergamino            Float
  wa                        Float
  temperatura_wa            Float
  humedad                   Float
  temperatura_humedad       Float
  densidad                  Float
  color_grano_verde         String
  olor                      String
  superior_malla_18         Float
  superior_malla_16         Float
  superior_malla_14         Float
  menor_malla_16            Float
  peso_defectos             Float
  quaquers                  Float
  peso_muestra_tostada      Float
  desarrollo                Float
  pocentaje_caramelizcacion Float
  c_desarrollo              Float
  grado                     String
  comentario                String
  defectos_primarios        String[]
  defectos_secundarios      String[]
  eliminado          Boolean  @default(false)

  Analisis Analisis?
}

model AnalisisSensorial {
  id_analisis_sensorial String   @id @default(uuid())
  fragancia_aroma       Float
  sabor                 Float
  sabor_residual        Float
  acidez                Float
  cuerpo                Float
  uniformidad           Float
  balance               Float
  taza_limpia           Float
  dulzor                Float
  puntaje_catador       Float
  taza_defecto_ligero   Float
  tazas_defecto_rechazo Float
  puntaje_taza          Float
  comentario            String
  fecha_registro        DateTime @default(now())
  
  eliminado          Boolean  @default(false)

  Analisis Analisis?
}

model AnalisisRapido {
  id_analisis_rapido String   @id @default(uuid())
  fecha_registro      DateTime @default(now())
  horneado           Boolean
  humo               Boolean
  uniforme           Boolean
  verde              Boolean
  arrebatado         Boolean
  oscuro             Boolean
  comentario         String?
  eliminado          Boolean  @default(false)

  Tueste Tueste?
}
