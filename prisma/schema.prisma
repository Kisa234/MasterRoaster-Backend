generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id_user         String    @id @default(uuid())
  nombre          String
  email           String    @unique
  rol             String
  password        String
  numero_telefono String
  eliminado       Boolean   @default(false)
  fecha_registro  DateTime  @default(now())
  fecha_editado   DateTime?

  // Relación con lote
  lotes             Lote[]
  // Relación con muestra
  muestras          Muestra[]
  // Relación con pedidos de cliente
  pedidos           Pedido[] 
  // Relación con Historial
  Historial Historial[]
}

model Muestra {
  id_muestra      String   @id 
  productor       String
  finca           String
  region          String
  departamento    String
  peso            Float
  variedades      String[]
  proceso         String
  id_user         String?
  id_analisis     String?  
  fecha_registro  DateTime @default(now())
  eliminado       Boolean  @default(false)
  // Relación con Usuario
  user     User?     @relation(fields: [id_user], references: [id_user])
  // Relación con Analisis
  analisis Analisis? @relation(fields: [id_analisis], references: [id_analisis])
}

model Lote {
  id_lote         String   @id
  productor       String
  finca           String
  region          String
  departamento    String
  peso            Float
  peso_tostado    Float?
  variedades      String[]
  proceso         String
  tipo_lote       String
  id_user         String?
  id_analisis     String?  
  fecha_registro  DateTime @default(now())
  eliminado       Boolean  @default(false)
  
  // Relación con Usuario
  user User? @relation(fields: [id_user], references: [id_user])
  // Relación con Analisis
  analisis Analisis? @relation(fields: [id_analisis], references: [id_analisis])
  // pedidos que usan este lote como entrada
  pedidosOrigen  Pedido[] @relation("LoteOrigen")
  // pedidos que generaron este lote como nuevo
  pedidosDestino Pedido[] @relation("LoteCreado")
  LoteTostado LoteTostado[]
  lotesHistoricos      Lote_Analisis[]
}

model LoteTostado {
  id_lote_tostado  String       @id 
  id_lote          String     
  fecha_tostado    DateTime
  perfil_tostado   String
  peso             Float
  fecha_registro   DateTime     @default(now())
  eliminado        Boolean      @default(false)


  pedido           Pedido? @relation("PedidoLoteTostado")
  lote             Lote         @relation(fields: [id_lote], references: [id_lote])
  tuestes          Tueste[]     

}


model Historial {
  id_historial     String   @id @default(uuid())
  entidad          String   // "Lote", "Pedido", "Usuario"
  id_entidad       String   // ID del lote, pedido o usuario
  id_user          String   
  accion           String
  comentario       String
  fecha_registro   DateTime @default(now())
  cambios          Json

  user User @relation(fields: [id_user], references: [id_user])
}

model Pedido {
  id_pedido             String    @id @default(uuid())
  fecha_registro        DateTime  @default(now())
  tipo_pedido           String
  cantidad              Float
  estado_pedido         String    @default("Pendiente")
  id_user               String
  id_lote               String
  id_nuevoLote          String?
  id_nuevoLote_tostado  String?   @unique  
  comentario            String?
  pesos                 Float[]
  fecha_tueste          DateTime?
  tostadora             String?
  eliminado             Boolean   @default(false)

  // Relación con Usuario como Cliente 
  cliente User @relation(fields: [id_user], references: [id_user])
  // Relación con lote original
  lote Lote @relation("LoteOrigen", fields: [id_lote], references: [id_lote])
  // Relación con lote creado
  loteCreado Lote? @relation("LoteCreado", fields: [id_nuevoLote], references: [id_lote])
  // Relación con lote tostado creado
  loteTostado LoteTostado? @relation("PedidoLoteTostado", fields: [id_nuevoLote_tostado], references: [id_lote_tostado])


  tueste Tueste[]

  
}

model Tueste {
  id_tueste                 String   @id @default(uuid())
  id_lote                   String
  tostadora                 String
  id_cliente                String
  id_pedido                 String
  densidad                  Float
  humedad                   Float    
  peso_entrada              Float
  fecha_tueste              DateTime
  temperatura_entrada       Float?
  llama_inicial             Float?
  aire_inicial              Float?
  punto_no_retorno          Float?
  tiempo_despues_crack      Float?
  temperatura_crack         Float?
  temperatura_salida        Float?
  tiempo_total              Float?
  porcentaje_caramelizacion Float?
  desarrollo                Float?
  grados_desarrollo         Float?
  peso_salida               Float?
  merma                     Float?
  agtrom_comercial          Float?
  agtrom_gourmet            Float?
  estado_tueste             String   @default("Pendiente")
  id_analisis_rapido        String?  @unique
  id_lote_tostado           String?  
  eliminado                 Boolean  @default(false)
  

  // Relación con Analisis Rapido
  analisisRapido            AnalisisRapido? @relation(fields: [id_analisis_rapido], references: [id_analisis_rapido])
  loteTostado               LoteTostado?     @relation(fields: [id_lote_tostado], references: [id_lote_tostado])
  pedido                    Pedido        @relation(fields: [id_pedido], references: [id_pedido])
}

model Lote_Analisis {
  id            String   @id @default(uuid())
  id_lote       String
  id_analisis   String
  fecha_agregado DateTime @default(now())

  lote          Lote     @relation(fields: [id_lote], references: [id_lote])
  analisis      Analisis @relation(fields: [id_analisis], references: [id_analisis])

  @@unique([id_lote, id_analisis]) 
}


model Analisis {
  id_analisis          String   @id @default(uuid())
  fecha_registro       DateTime @default(now())
  analisisFisico_id    String?  @unique 
  analisisSensorial_id String?  @unique
  comentario           String
  
  eliminado          Boolean  @default(false)

  // Relación con Analisis Fisico
  analisisFisico    AnalisisFisico?    @relation(fields: [analisisFisico_id], references: [id_analisis_fisico])
  //  Relación con Analisis Sensorial
  analisisSensorial AnalisisSensorial? @relation(fields: [analisisSensorial_id], references: [id_analisis_sensorial])

  Muestra Muestra[]
  Lote    Lote[]
  lotesHistoricos      Lote_Analisis[]
}

model AnalisisFisico {
  id_analisis_fisico        String   @id @default(uuid())
  fecha_registro            DateTime @default(now())
  peso_muestra              Float
  peso_pergamino            Float
  wa                        Float
  temperatura_wa            Float
  humedad                   Float
  temperatura_humedad       Float
  densidad                  Float
  color_grano_verde         String
  olor                      String
  superior_malla_18         Float
  superior_malla_16         Float
  superior_malla_14         Float
  menor_malla_16            Float
  peso_defectos             Float
  quaquers                  Float?
  peso_muestra_tostada      Float?
  desarrollo                Float?
  pocentaje_caramelizcacion Float?
  c_desarrollo              Float?
  grado                     String?
  comentario                String
  defectos_primarios        String[]
  defectos_secundarios      String[]
  eliminado          Boolean  @default(false)

  Analisis Analisis?
}

model AnalisisSensorial {
  id_analisis_sensorial String   @id @default(uuid())
  fragancia_aroma       Float
  sabor                 Float
  sabor_residual        Float
  acidez                Float
  cuerpo                Float
  uniformidad           Float
  balance               Float
  taza_limpia           Float
  dulzor                Float
  puntaje_catador       Float
  taza_defecto_ligero   Float
  tazas_defecto_rechazo Float
  puntaje_taza          Float
  comentario            String
  fecha_registro        DateTime @default(now())
  
  eliminado          Boolean  @default(false)

  Analisis Analisis?
}

model AnalisisRapido {
  id_analisis_rapido String   @id @default(uuid())
  fecha_registro      DateTime @default(now())
  horneado           Boolean
  humo               Boolean
  uniforme           Boolean
  verde              Boolean
  arrebatado         Boolean
  oscuro             Boolean
  comentario         String?
  eliminado          Boolean  @default(false)

  Tueste Tueste?
}
